---
interface Props {
  name: string;
}

const formatName = (name: string): string => {
  const exceptions: { [key: string]: string } = {
    'isabella-d-costa': "Isabella D'Costa",
    'alex-d-souza': "Alex D'Souza",
    'amal-al-dalawi': 'Amal Al-Dalawi',
  };

  // Check if name matches one of the exceptions
  if (exceptions[name]) return exceptions[name];

  return name
    .split('-')
    .map(part => part.charAt(0).toUpperCase() + part.slice(1))
    .join(' ');
};

const { name } = Astro.props;
const formattedName = formatName(name);
---

<div class="profile">
  <img
    class="pic"
    src=`https://static.igem.wiki/teams/5118/img/members/prof/${name}.webp`
    onmouseover=`this.src='https://static.igem.wiki/teams/5118/img/members/silly/${name}.webp'`
    onmouseout=`this.src='https://static.igem.wiki/teams/5118/img/members/prof/${name}.webp'`
    alt={name}
  />
  <div class="name">{formattedName}</div>
</div>

<style lang="scss">
  @import '../global.scss';

  .profile {
    display: flex;
    flex-direction: column;
    align-items: center;

    .pic {
      object-fit: cover;
      width: 20rem;
      height: 20rem;
      border: 0.5rem solid rgba($primary, 0.6);
    }

    .name {
      font-size: 2rem;
      color: $primary;
      margin-top: 1rem;
    }
  }
</style>
