---
interface Props {
  heading: string;
}

const { heading } = Astro.props;
---

<script>
  // Switch arrow (⯈ to ⯆), and show content
  document.addEventListener('click', e => {
    const target = e.target as HTMLElement | null;
    const dropdown = target?.closest('.dropdown'); // find closest dropdown
    const button = dropdown?.querySelector('button'); // find this dropdown's button

    if (dropdown && button) {
      dropdown.classList.toggle('open'); // toggle dropdown open/close state
      button.classList.toggle('open'); // toggle button state for arrow change
    }
  });
</script>

<div class="dropdown">
  <button>
    {heading}
  </button>
  <div class="content">
    <slot />
  </div>
</div>

<style lang="scss">
  @import '../global.scss';

  .dropdown {
    width: 100%;
    padding: 2rem;
    position: relative;

    button {
      font-family: inherit;
      font-size: 2rem;
      background-color: $secondary;
      color: $primary;
      padding: 10px;
      border: none;
      cursor: pointer;
      @include transition-ease;

      &::before {
        content: '⯈';
        margin-right: 5px;
        transition: transform 0.3s ease;
      }

      &:hover {
        background-color: $hp;
      }

      &.open {
        &::before {
          content: '⯆';
          margin-right: 5px;
        }

        .content {
          opacity: 1;
          @include transition-ease;
        }
      }
    }

    .content {
      line-height: 2;
      background-color: #f9f9f9;
      opacity: 0;
      padding: 2rem;
      box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);
      position: relative;
      z-index: 1;
    }

    &.open .content {
      opacity: 1;
      @include transition-ease;
    }
  }
</style>
